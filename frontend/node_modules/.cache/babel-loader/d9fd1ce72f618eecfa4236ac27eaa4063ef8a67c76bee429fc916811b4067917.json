{"ast":null,"code":"var _jsxFileName = \"D:\\\\mcp-server\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000';\nfunction App() {\n  _s();\n  const [folderName, setFolderName] = useState('');\n  const [files, setFiles] = useState([]);\n  const [fileList, setFileList] = useState([]);\n  const [prompt, setPrompt] = useState('');\n  const [message, setMessage] = useState('');\n\n  // Handle folder upload\n  const handleFolderUpload = async e => {\n    e.preventDefault();\n    if (!folderName || files.length === 0) {\n      setMessage('Please provide a folder name and select files.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('folderName', folderName);\n    for (let file of files) {\n      formData.append('files', file);\n    }\n    formData.append('folderName', folderName);\n    try {\n      await axios.post(`${API_URL}/upload-folder`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setMessage('Folder uploaded successfully.');\n      fetchFileList();\n    } catch (err) {\n      setMessage('Error uploading folder.');\n    }\n  };\n\n  // Fetch file list\n  const fetchFileList = async () => {\n    if (!folderName) return;\n    try {\n      const res = await axios.get(`${API_URL}/list-files`, {\n        params: {\n          folderName\n        }\n      });\n      setFileList(res.data.files);\n    } catch {\n      setFileList([]);\n    }\n  };\n\n  // Handle prompt actions (simple parser: create, edit, delete)\n  const handlePrompt = async () => {\n    if (!prompt.trim() || !folderName) return;\n    const [action, ...rest] = prompt.trim().split(' ');\n    const fileName = rest[0];\n    const content = rest.slice(1).join(' ');\n    try {\n      if (action === 'create') {\n        await axios.post(`${API_URL}/create-file`, {\n          folderName,\n          fileName,\n          content\n        });\n        setMessage(`File ${fileName} created.`);\n      } else if (action === 'edit') {\n        await axios.post(`${API_URL}/edit-file`, {\n          folderName,\n          fileName,\n          content\n        });\n        setMessage(`File ${fileName} edited.`);\n      } else if (action === 'delete') {\n        await axios.post(`${API_URL}/delete-file`, {\n          folderName,\n          fileName\n        });\n        setMessage(`File ${fileName} deleted.`);\n      } else {\n        setMessage('Unknown command. Use: create, edit, or delete.');\n        return;\n      }\n      fetchFileList();\n    } catch (err) {\n      setMessage('Operation failed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: '40px auto',\n      fontFamily: 'sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MCP Filesystem Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFolderUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Folder Name\",\n        value: folderName,\n        onChange: e => setFolderName(e.target.value),\n        style: {\n          marginRight: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        webkitdirectory: \"true\",\n        directory: \"true\",\n        multiple: true,\n        onChange: e => setFiles(Array.from(e.target.files))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Prompt (e.g. create file.txt Hello)\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        style: {\n          width: '70%',\n          marginRight: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrompt,\n        children: \"Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'green',\n        marginBottom: 10\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Files in Folder:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: fileList.map(f => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: f\n      }, f, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 28\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchFileList,\n      children: \"Refresh File List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mVo6c1qs9DfEqQyMGiE+Tw6uhP0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_URL","App","_s","folderName","setFolderName","files","setFiles","fileList","setFileList","prompt","setPrompt","message","setMessage","handleFolderUpload","e","preventDefault","length","formData","FormData","append","file","post","headers","fetchFileList","err","res","get","params","data","handlePrompt","trim","action","rest","split","fileName","content","slice","join","style","maxWidth","margin","fontFamily","children","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","marginRight","webkitdirectory","directory","multiple","Array","from","width","onClick","color","marginBottom","map","f","_c","$RefreshReg$"],"sources":["D:/mcp-server/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000';\r\n\r\nfunction App() {\r\n  const [folderName, setFolderName] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [fileList, setFileList] = useState([]);\r\n  const [prompt, setPrompt] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Handle folder upload\r\n  const handleFolderUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!folderName || files.length === 0) {\r\n      setMessage('Please provide a folder name and select files.');\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    formData.append('folderName', folderName);\r\n    for (let file of files) {\r\n       formData.append('files', file);\r\n    }\r\n    formData.append('folderName', folderName);\r\n    try {\r\n      await axios.post(`${API_URL}/upload-folder`, formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n      setMessage('Folder uploaded successfully.');\r\n      fetchFileList();\r\n    } catch (err) {\r\n      setMessage('Error uploading folder.');\r\n    }\r\n  };\r\n\r\n  // Fetch file list\r\n  const fetchFileList = async () => {\r\n    if (!folderName) return;\r\n    try {\r\n      const res = await axios.get(`${API_URL}/list-files`, { params: { folderName } });\r\n      setFileList(res.data.files);\r\n    } catch {\r\n      setFileList([]);\r\n    }\r\n  };\r\n\r\n  // Handle prompt actions (simple parser: create, edit, delete)\r\n  const handlePrompt = async () => {\r\n    if (!prompt.trim() || !folderName) return;\r\n    const [action, ...rest] = prompt.trim().split(' ');\r\n    const fileName = rest[0];\r\n    const content = rest.slice(1).join(' ');\r\n    try {\r\n      if (action === 'create') {\r\n        await axios.post(`${API_URL}/create-file`, { folderName, fileName, content });\r\n        setMessage(`File ${fileName} created.`);\r\n      } else if (action === 'edit') {\r\n        await axios.post(`${API_URL}/edit-file`, { folderName, fileName, content });\r\n        setMessage(`File ${fileName} edited.`);\r\n      } else if (action === 'delete') {\r\n        await axios.post(`${API_URL}/delete-file`, { folderName, fileName });\r\n        setMessage(`File ${fileName} deleted.`);\r\n      } else {\r\n        setMessage('Unknown command. Use: create, edit, or delete.');\r\n        return;\r\n      }\r\n      fetchFileList();\r\n    } catch (err) {\r\n      setMessage('Operation failed.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 600, margin: '40px auto', fontFamily: 'sans-serif' }}>\r\n      <h2>MCP Filesystem Manager</h2>\r\n      <form onSubmit={handleFolderUpload}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Folder Name\"\r\n          value={folderName}\r\n          onChange={e => setFolderName(e.target.value)}\r\n          style={{ marginRight: 8 }}\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          webkitdirectory=\"true\"\r\n          directory=\"true\"\r\n          multiple\r\n          onChange={e => setFiles(Array.from(e.target.files))}\r\n        />\r\n        <button type=\"submit\">Upload Folder</button>\r\n      </form>\r\n      <div style={{ margin: '20px 0' }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Prompt (e.g. create file.txt Hello)\"\r\n          value={prompt}\r\n          onChange={e => setPrompt(e.target.value)}\r\n          style={{ width: '70%', marginRight: 8 }}\r\n        />\r\n        <button onClick={handlePrompt}>Run</button>\r\n      </div>\r\n      {message && <div style={{ color: 'green', marginBottom: 10 }}>{message}</div>}\r\n      <h4>Files in Folder:</h4>\r\n      <ul>\r\n        {fileList.map(f => <li key={f}>{f}</li>)}\r\n      </ul>\r\n      <button onClick={fetchFileList}>Refresh File List</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}