{"ast":null,"code":"var _jsxFileName = \"D:\\\\mcp-server\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000';\nfunction App() {\n  _s();\n  const [folderName, setFolderName] = useState('');\n  const [files, setFiles] = useState([]);\n  const [fileList, setFileList] = useState([]);\n  const [prompt, setPrompt] = useState('');\n  const [message, setMessage] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [editContent, setEditContent] = useState('');\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n\n  // Handle folder upload\n  const handleFolderUpload = async e => {\n    e.preventDefault();\n    if (!folderName || files.length === 0) {\n      setMessage('Please provide a folder name and select files.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('folderName', folderName);\n    for (let file of files) {\n      formData.append('files', file);\n    }\n    try {\n      await axios.post(`${API_URL}/upload-folder`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setMessage('Folder uploaded successfully.');\n      fetchFileList();\n    } catch (err) {\n      setMessage('Error uploading folder.');\n    }\n  };\n\n  // Fetch file list\n  const fetchFileList = async () => {\n    if (!folderName) return;\n    try {\n      const res = await axios.get(`${API_URL}/list-files`, {\n        params: {\n          folderName\n        }\n      });\n      setFileList(res.data.files);\n    } catch {\n      setFileList([]);\n    }\n  };\n\n  // Handle prompt actions (simple parser: create, edit, delete)\n  const handlePrompt = async () => {\n    if (!prompt.trim() || !folderName) return;\n    const [action, ...rest] = prompt.trim().split(' ');\n    const fileName = rest[0];\n    const content = rest.slice(1).join(' ');\n    if (action === 'create' && (!fileName || fileName.trim() === '')) {\n      setMessage('Please provide a file name for creation.');\n      return;\n    }\n    try {\n      if (action === 'create') {\n        await axios.post(`${API_URL}/create-file`, {\n          folderName,\n          fileName,\n          content\n        });\n        setMessage(`File ${fileName} created.`);\n      } else if (action === 'edit') {\n        await axios.post(`${API_URL}/edit-file`, {\n          folderName,\n          fileName,\n          content\n        });\n        setMessage(`File ${fileName} edited.`);\n      } else if (action === 'delete') {\n        await axios.post(`${API_URL}/delete-file`, {\n          folderName,\n          fileName\n        });\n        setMessage(`File ${fileName} deleted.`);\n      } else {\n        setMessage('Unknown command. Use: create, edit, or delete.');\n        return;\n      }\n      fetchFileList();\n    } catch (err) {\n      setMessage('Operation failed.');\n    }\n  };\n\n  // UI: Open edit modal and load file content\n  const openEditModal = async file => {\n    setSelectedFile(file);\n    // Fetch file content\n    try {\n      const res = await axios.get(`${API_URL}/list-files`, {\n        params: {\n          folderName\n        }\n      });\n      setEditContent('');\n    } catch {\n      setEditContent('');\n    }\n    setShowEditModal(true);\n  };\n\n  // UI: Handle edit submit\n  const handleEditSubmit = async () => {\n    try {\n      await axios.post(`${API_URL}/edit-file`, {\n        folderName,\n        fileName: selectedFile,\n        content: editContent\n      });\n      setMessage(`File ${selectedFile} edited.`);\n      setShowEditModal(false);\n      fetchFileList();\n    } catch {\n      setMessage('Failed to edit file.');\n    }\n  };\n\n  // UI: Open delete confirm\n  const openDeleteConfirm = file => {\n    setSelectedFile(file);\n    setShowDeleteConfirm(true);\n  };\n\n  // UI: Handle delete\n  const handleDelete = async () => {\n    try {\n      await axios.post(`${API_URL}/delete-file`, {\n        folderName,\n        fileName: selectedFile\n      });\n      setMessage(`File ${selectedFile} deleted.`);\n      setShowDeleteConfirm(false);\n      fetchFileList();\n    } catch {\n      setMessage('Failed to delete file.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mcp-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: 28,\n        color: '#4f8cff',\n        letterSpacing: 1\n      },\n      children: \"MCP Filesystem Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mcp-section\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFolderUpload,\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Folder Name\",\n          value: folderName,\n          onChange: e => setFolderName(e.target.value),\n          className: \"mcp-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          webkitdirectory: \"true\",\n          directory: \"true\",\n          multiple: true,\n          onChange: e => setFiles(Array.from(e.target.files)),\n          className: \"mcp-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"mcp-button\",\n          children: \"Upload Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mcp-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Prompt (e.g. create file.txt Hello)\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        className: \"mcp-input\",\n        style: {\n          width: '60%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrompt,\n        className: \"mcp-button\",\n        children: \"Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mcp-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mcp-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 12px 0',\n          color: '#333'\n        },\n        children: \"Files in Folder:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"mcp-file-list\",\n        children: fileList.map(f => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mcp-file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mcp-file-name\",\n            children: f\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mcp-button\",\n            onClick: () => openEditModal(f),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mcp-button mcp-button-danger\",\n            onClick: () => openDeleteConfirm(f),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, f, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchFileList,\n        className: \"mcp-button\",\n        style: {\n          marginTop: 10\n        },\n        children: \"Refresh File List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), showEditModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mcp-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mcp-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mcp-modal-title\",\n          children: [\"Edit \", selectedFile]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 8,\n          className: \"mcp-textarea\",\n          value: editContent,\n          onChange: e => setEditContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10,\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowEditModal(false),\n            className: \"mcp-button\",\n            style: {\n              marginRight: 8,\n              background: '#bbb'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditSubmit,\n            className: \"mcp-button\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), showDeleteConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mcp-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mcp-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mcp-modal-title\",\n          children: [\"Delete \", selectedFile, \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10,\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowDeleteConfirm(false),\n            className: \"mcp-button\",\n            style: {\n              marginRight: 8,\n              background: '#bbb'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDelete,\n            className: \"mcp-button mcp-button-danger\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9NfbeqDWXxp8+Q8pwEXsygtQaa8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_URL","App","_s","folderName","setFolderName","files","setFiles","fileList","setFileList","prompt","setPrompt","message","setMessage","selectedFile","setSelectedFile","editContent","setEditContent","showEditModal","setShowEditModal","showDeleteConfirm","setShowDeleteConfirm","handleFolderUpload","e","preventDefault","length","formData","FormData","append","file","post","headers","fetchFileList","err","res","get","params","data","handlePrompt","trim","action","rest","split","fileName","content","slice","join","openEditModal","handleEditSubmit","openDeleteConfirm","handleDelete","className","children","style","textAlign","marginBottom","color","letterSpacing","_jsxFileName","lineNumber","columnNumber","onSubmit","display","alignItems","flexWrap","type","placeholder","value","onChange","target","webkitdirectory","directory","multiple","Array","from","width","onClick","margin","map","f","marginTop","rows","marginRight","background","_c","$RefreshReg$"],"sources":["D:/mcp-server/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst API_URL = 'http://localhost:5000';\r\n\r\nfunction App() {\r\n  const [folderName, setFolderName] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [fileList, setFileList] = useState([]);\r\n  const [prompt, setPrompt] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [editContent, setEditContent] = useState('');\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n\r\n  // Handle folder upload\r\n  const handleFolderUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!folderName || files.length === 0) {\r\n      setMessage('Please provide a folder name and select files.');\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    formData.append('folderName', folderName);\r\n    for (let file of files) {\r\n      formData.append('files', file);\r\n    }\r\n    try {\r\n      await axios.post(`${API_URL}/upload-folder`, formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n      setMessage('Folder uploaded successfully.');\r\n      fetchFileList();\r\n    } catch (err) {\r\n      setMessage('Error uploading folder.');\r\n    }\r\n  };\r\n\r\n  // Fetch file list\r\n  const fetchFileList = async () => {\r\n    if (!folderName) return;\r\n    try {\r\n      const res = await axios.get(`${API_URL}/list-files`, { params: { folderName } });\r\n      setFileList(res.data.files);\r\n    } catch {\r\n      setFileList([]);\r\n    }\r\n  };\r\n\r\n  // Handle prompt actions (simple parser: create, edit, delete)\r\n  const handlePrompt = async () => {\r\n    if (!prompt.trim() || !folderName) return;\r\n    const [action, ...rest] = prompt.trim().split(' ');\r\n    const fileName = rest[0];\r\n    const content = rest.slice(1).join(' ');\r\n    if (action === 'create' && (!fileName || fileName.trim() === '')) {\r\n      setMessage('Please provide a file name for creation.');\r\n      return;\r\n    }\r\n    try {\r\n      if (action === 'create') {\r\n        await axios.post(`${API_URL}/create-file`, { folderName, fileName, content });\r\n        setMessage(`File ${fileName} created.`);\r\n      } else if (action === 'edit') {\r\n        await axios.post(`${API_URL}/edit-file`, { folderName, fileName, content });\r\n        setMessage(`File ${fileName} edited.`);\r\n      } else if (action === 'delete') {\r\n        await axios.post(`${API_URL}/delete-file`, { folderName, fileName });\r\n        setMessage(`File ${fileName} deleted.`);\r\n      } else {\r\n        setMessage('Unknown command. Use: create, edit, or delete.');\r\n        return;\r\n      }\r\n      fetchFileList();\r\n    } catch (err) {\r\n      setMessage('Operation failed.');\r\n    }\r\n  };\r\n\r\n  // UI: Open edit modal and load file content\r\n  const openEditModal = async (file) => {\r\n    setSelectedFile(file);\r\n    // Fetch file content\r\n    try {\r\n      const res = await axios.get(`${API_URL}/list-files`, { params: { folderName } });\r\n      setEditContent('');\r\n    } catch {\r\n      setEditContent('');\r\n    }\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  // UI: Handle edit submit\r\n  const handleEditSubmit = async () => {\r\n    try {\r\n      await axios.post(`${API_URL}/edit-file`, { folderName, fileName: selectedFile, content: editContent });\r\n      setMessage(`File ${selectedFile} edited.`);\r\n      setShowEditModal(false);\r\n      fetchFileList();\r\n    } catch {\r\n      setMessage('Failed to edit file.');\r\n    }\r\n  };\r\n\r\n  // UI: Open delete confirm\r\n  const openDeleteConfirm = (file) => {\r\n    setSelectedFile(file);\r\n    setShowDeleteConfirm(true);\r\n  };\r\n\r\n  // UI: Handle delete\r\n  const handleDelete = async () => {\r\n    try {\r\n      await axios.post(`${API_URL}/delete-file`, { folderName, fileName: selectedFile });\r\n      setMessage(`File ${selectedFile} deleted.`);\r\n      setShowDeleteConfirm(false);\r\n      fetchFileList();\r\n    } catch {\r\n      setMessage('Failed to delete file.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mcp-container\">\r\n      <h2 style={{ textAlign: 'center', marginBottom: 28, color: '#4f8cff', letterSpacing: 1 }}>MCP Filesystem Manager</h2>\r\n      <div className=\"mcp-section\">\r\n        <form onSubmit={handleFolderUpload} style={{ display: 'flex', alignItems: 'center', flexWrap: 'wrap' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Folder Name\"\r\n            value={folderName}\r\n            onChange={e => setFolderName(e.target.value)}\r\n            className=\"mcp-input\"\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            webkitdirectory=\"true\"\r\n            directory=\"true\"\r\n            multiple\r\n            onChange={e => setFiles(Array.from(e.target.files))}\r\n            className=\"mcp-input\"\r\n          />\r\n          <button type=\"submit\" className=\"mcp-button\">Upload Folder</button>\r\n        </form>\r\n      </div>\r\n      <div className=\"mcp-section\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Prompt (e.g. create file.txt Hello)\"\r\n          value={prompt}\r\n          onChange={e => setPrompt(e.target.value)}\r\n          className=\"mcp-input\"\r\n          style={{ width: '60%' }}\r\n        />\r\n        <button onClick={handlePrompt} className=\"mcp-button\">Run</button>\r\n      </div>\r\n      {message && <div className=\"mcp-message\">{message}</div>}\r\n      <div className=\"mcp-section\">\r\n        <h4 style={{ margin: '0 0 12px 0', color: '#333' }}>Files in Folder:</h4>\r\n        <ul className=\"mcp-file-list\">\r\n          {fileList.map(f => (\r\n            <li key={f} className=\"mcp-file-item\">\r\n              <span className=\"mcp-file-name\">{f}</span>\r\n              <button className=\"mcp-button\" onClick={() => openEditModal(f)}>Edit</button>\r\n              <button className=\"mcp-button mcp-button-danger\" onClick={() => openDeleteConfirm(f)}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button onClick={fetchFileList} className=\"mcp-button\" style={{ marginTop: 10 }}>Refresh File List</button>\r\n      </div>\r\n\r\n      {/* Edit Modal */}\r\n      {showEditModal && (\r\n        <div className=\"mcp-modal-overlay\">\r\n          <div className=\"mcp-modal\">\r\n            <h3 className=\"mcp-modal-title\">Edit {selectedFile}</h3>\r\n            <textarea\r\n              rows={8}\r\n              className=\"mcp-textarea\"\r\n              value={editContent}\r\n              onChange={e => setEditContent(e.target.value)}\r\n            />\r\n            <div style={{ marginTop: 10, textAlign: 'right' }}>\r\n              <button onClick={() => setShowEditModal(false)} className=\"mcp-button\" style={{ marginRight: 8, background: '#bbb' }}>Cancel</button>\r\n              <button onClick={handleEditSubmit} className=\"mcp-button\">Save</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Delete Confirm */}\r\n      {showDeleteConfirm && (\r\n        <div className=\"mcp-modal-overlay\">\r\n          <div className=\"mcp-modal\">\r\n            <h3 className=\"mcp-modal-title\">Delete {selectedFile}?</h3>\r\n            <div style={{ marginTop: 10, textAlign: 'right' }}>\r\n              <button onClick={() => setShowDeleteConfirm(false)} className=\"mcp-button\" style={{ marginRight: 8, background: '#bbb' }}>Cancel</button>\r\n              <button onClick={handleDelete} className=\"mcp-button mcp-button-danger\">Delete</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}